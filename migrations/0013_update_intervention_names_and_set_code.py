# Generated by Django 4.2.25 on 2025-10-14 13:07

from django.db import migrations, transaction


class Migration(migrations.Migration):
    dependencies = [
        ("snt_malaria", "0012_intervention_code_budgetsettings_budget"),
    ]

    def add_lsm_intervention(apps, schema_editor):
        InterventionCategory = apps.get_model("snt_malaria", "InterventionCategory")
        Intervention = apps.get_model("snt_malaria", "Intervention")
        categories = InterventionCategory.objects.filter(name="Vector Control")

        with transaction.atomic():
            for vc_category in categories:
                Intervention.objects.create(
                    name="LSM",
                    description="Larval Source Management",
                    created_by=vc_category.created_by,
                    intervention_category_id=vc_category.id,
                    code="lsm",
                ).save()

    def set_intervention_names(apps, schema_editor):
        Intervention = apps.get_model("snt_malaria", "Intervention")
        llin_interventions = Intervention.objects.filter(name="LLIN")
        for llin_campaign_intervention in llin_interventions:
            llin_campaign_intervention.name = "LLIN Campaign"
            llin_campaign_intervention.description = "Long-Lasting Insecticidal Nets - Routine"
            llin_campaign_intervention.code = "itn_campaign"
            llin_campaign_intervention.save()
            llin_routine_intervention = Intervention.objects.create(
                name="LLIN Routine",
                description="Long-Lasting Insecticidal Nets - Routine",
                created_by=llin_campaign_intervention.created_by,
                intervention_category_id=llin_campaign_intervention.intervention_category_id,
                code="itn_routine",
            )
            llin_routine_intervention.save()

    def merge_cm_interventions(apps, schema_edit):
        InterventionCategories = apps.get_model("snt_malaria", "InterventionCategory")
        Intervention = apps.get_model("snt_malaria", "Intervention")
        InterventionAssignment = apps.get_model("snt_malaria", "InterventionAssignment")

        cm_categories = InterventionCategories.objects.prefetch_related("intervention_set").filter(
            name="Case Management"
        )

        with transaction.atomic():
            for category in cm_categories:
                interventions = category.intervention_set.all()
                intervention_names = set(i.name for i in interventions)
                if not ("RDTs" in intervention_names and "ACTs" in intervention_names):
                    # Skip this category if it doesn't contain both interventions
                    pass

                cm_intervention = Intervention.objects.create(
                    name="CM",
                    description="Case Management",
                    code="cm",
                    intervention_category_id=category.id,
                    created_by=category.created_by,
                )
                cm_intervention.save()

                for intervention in interventions:
                    assignments = InterventionAssignment.objects.filter(intervention_id=intervention.id)
                    assignments.delete()
                    intervention.delete()

    def set_intervention_codes(apps, schema_editor):
        intervention_name_to_code = {
            "RTS,S": "vacc",
            "SMC": "smc",
            "PMC": "pmc",
            "IPTp": "iptp",
            "LLIN Campaign": "itn_campaign",
            "LLIN Routine": "itn_routine",
            "IRS": "irs",
            "MDA": "",
            "CM": "cm",
        }

        Intervention = apps.get_model("snt_malaria", "Intervention")
        all_interventions = Intervention.objects.all()
        for intervention in all_interventions:
            intervention.code = intervention_name_to_code.get(intervention.name)
            if intervention.code:
                intervention.save()

    operations = [
        migrations.RunPython(set_intervention_names),
        migrations.RunPython(merge_cm_interventions),
        migrations.RunPython(set_intervention_codes),
        migrations.RunPython(add_lsm_intervention),
    ]
